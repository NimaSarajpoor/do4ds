# Introduction {.unnumbered}

At some point, most data scientists reach the point where they want to show their work to others. But the skills and tools to *deploy* data science are completely different from the skills and tools needed to *do* data science.

You've spent your time thinking about data cleaning, building great dashboards and visualizations, and (perhaps) gradient boosted trees. Now you've got to think about app performance, deployments, and Docker.

\> If you're a data scientist who wants to put your work in front of other people, this book aims to equip you with \*\*the technical things you need to know that aren't data science.\*\*

This is what it means to put data science into production. It's easy to underestimate whether what you're doing counts as putting data science into production. But it does. If you're trying to show other people your work, you're in production.

Innumerable pixels have already been spent on explaining and exploring DevOps in a pure software engineering context. And the burgeoning field of DataOps is about applying DevOps and agile principles where the context is enterprise data flows, rather than software deployments.

::: callout-note
## DevOps vs IT/Admin

***DevOps*** refers to the *knowledge, practices, and tools* that can help you put your work into production. It's what this book is about.

***IT/Admin*** describes a set of *people and roles* who have the permission and responsibility for managing the computers at your organization.

Depending on your organization, the people and team with IT/Admin team might have a different name like SysAdmin, Site Reliability Engineering (SRE), or (yes) DevOps.[^intro-1] In large organizations, IT/Admin functions may be split among many different standalone groups including security, databases, networking, storage, procurement, cloud, and more.

In small organizations, there may be no named IT/Admin group, which means it's you!

Either way, that's how I'll be using these terms throughout the book.
:::

[^intro-1]: I think a lot of DevOps experts would argue that you'r doing DevOps wrong if you have a standalone DevOps team.

DevOps is a slippery concept, because it's not a specific set of technologies -- it's a set of norms, practices, and tools that help make the path from development to deployment easier. If you, like me, have a data science background, this can be a somewhat incomprehensible statement. What does it really mean?

Some organizations end up essentializing DevOps as IT/Admin, but make it Docker. It basically boils down to closing the gap between the development teams and the IT/Admin teams.

Part of the reason that DevOps is such a slippery concept is that deployment targets vary widely, and so getting concrete about DevOps is highly dependent on your context.

-   You work for an auto parts supplier and are responsible for the inventory software. This is in-house software that runs live on your organization's servers. This software has to know how many of any given part are on the shelf at any given time, help managers know when to order more, and integrate with the online ordering system, allowing users to confidently order and show up at the store knowing their order will be there. Perhaps there's a new module to the software that integrates with the website for a new 2-hour pickup from store option. After developing this module and testing it on your local machine, you have to get it running on your organization's servers and integrated into the existing system, with a minimum of downtime. How you do this with a minimum of effort and downtime of the existing system is a problem DevOps aims to solve.

-   Perhaps you work for a company that produces data analysis software...maybe it's called RStudio. In this case, you're mostly producing software that someone else will download and run, so the DevOps challenge is different. Instead of putting the software live "into production", your main tasks are getting the software turned from a bunch of code into a built product, making sure the documentation is up to date, and ensuring that the process of QA-ing, testing, and putting the new version up live on the website is as smooth as possible.

-   In another case, you might work for a large organization that has an online document writing software, say called Gooble Docs. You're in charge of the new markdown editing system for Gooble Docs. You've got to work with your developers and with the IT folks who run the servers where Gooble Docs runs to ensure you can release the new markdown editor without interrupting services for your users.

If you're a data scientist, how does DevOps apply to you? There are two main ways. The first is that you are probably responsible for a variety of different activities relating to developing your analyses and apps. Since data science is fundamentally a computational practice, you're going to need to use computers, and if you're going to production, you're probably using servers.

In some cases, you'll have to manage those servers yourself. Hopefully this book will help you learn how to do that. In other cases, your team is supported by an IT/Admin group who will help you host your apps once they're finished. This book can help you learn how to work with them.

This book is aimed at data scientists at varying levels of technical sophistication and is designed to help you understand what are the patterns, tools, and processes you can adopt to make it easier to take your data science work into production.

In the first section, you'll learn about patterns, tools, and processes that will make it easier for you to develop and deploy your code, even if you are never directly responsible for managing the underlying server infrastructure. This section should be useful for any data scientist who is putting work "into production".

Section two is about knowledge that will help you interact with more formal IT resources. So if you have to talk to the IT/Admins at your organization and just feel like you're speaking different languages, this section will help you out.

Section three is about DIY-ing your own servers. This section is really for people who are at small organizations where you have to be your own IT/Admin, or where the data science team is on their own to manage their servers.

Hopefully, once you've read this book, you'll understand how to deploy your data science, whether you're building a DIY deployment system or trying to work with your organization's IT/Admin group to make that happen.
